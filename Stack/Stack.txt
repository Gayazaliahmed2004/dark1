package helloworld;

public class StackOperations {

		private int[] stack;
		private int top;
		private int maxSize;
		
		public StackOperations(int maxSize) {
			this.maxSize=maxSize;
			stack=new int[maxSize];
			top=-1;
	}
		public void push(int item) {
			if(!isFull()) {
				stack[++top]=item;
			}else {
				System.out.println("Stack is full");
			}
		
		}	
		public int pop() {
			if(!isEmpty()) {
				return stack[top--];
			}else {
				System.out.println("Stack is Empty");
				return -1;
			}
		}
		public int peek() {
			if(!isEmpty()) {
				return stack[top];
			}else{
				System.out.println("Stack is empty");
				return -1;
			}
		}
		public boolean isEmpty() {
			return top==-1;		
		}
		public boolean isFull() {
			return top == maxSize-1;
		}
		
	public void printStack() {
		for(int i=0; i<=top; i++) {
			System.out.print(stack[i] + " ");
		}
		System.out.println();
		}

public class Stack_main {
	public static void main(String[] args) {
		StackOperations stack = new StackOperations(10);
		
		System.out.println("Pushinf integers onto the stack:");
		for(int i =0; i<10; i++) {
			stack.push(i);			
		}
		System.out.println("Stack after pushing:");
		stack.printStack();
		
		System.out.println("Popping integers off the stack:");
		for(int i=0; i<5; i++) {
			int poppedElement=stack.pop();
			System.out.println("Popped Elements:" + poppedElement);
			System.out.println("Stack after pop:");
			stack.printStack();
		}
	}
}
}