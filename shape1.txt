package program;

import java.util.Scanner;

public abstract class Shape {
	private String name;
	public Shape(String name) {
		this.name = name;
	}
	public String getName() {
		return name;
	}
	public abstract double calculateArea();
	public abstract double calculatePerimeter();
	public static void main(String[] args) {
		double i, j, k, l;
		System.out.println("Enter Radius of circle:");
			try (Scanner sc = new Scanner(System.in)) {
				i = sc.nextDouble();
				Circles circle = new Circles("Circle", i);
				System.out.println("Area of circle: " + circle.calculateArea());
					System.out.println("Perimeter of circle: " + circle.calculatePerimeter());
					System.out.println("Enter sides of Triangle j, k, l:");
					j = sc.nextDouble();
					k = sc.nextDouble();
					l = sc.nextDouble();
			}
			Shape triangle = new Triangle("Triangle", j, k, l);
				System.out.println("Area of triangle: " + triangle.calculateArea());
				System.out.println("Perimeter of Triangle: " + triangle.calculatePerimeter());
		}
	}
		class Circles extends Shape {
			private double i; // radius is declared as variable i
			public Circles(String name, double i) {
				super(name);
				this.i = i;
			}
			@Override
			public double calculateArea() {
				return Math.PI * i * i;
			}
			@Override
			public double calculatePerimeter() {
				return 2 * Math.PI * i;
				}
			}
		class Triangle extends Shape {
			private double sideA;
			private double sideB;
				private double sideC;
				public Triangle(String name, double sideA, double sideB, double sideC) {
					super(name);
					this.sideA = sideA;
					this.sideB = sideB;
					this.sideC = sideC;
				}
				@Override
				public double calculateArea() {
					double semiperimeter = (sideA + sideB + sideC) / 2;
					return Math.sqrt(semiperimeter * (semiperimeter - sideA) * (semiperimeter- sideB) * (semiperimeter - sideC));
				}
				@Override
				public double calculatePerimeter() {
						return sideA + sideB + sideC;
 }
}